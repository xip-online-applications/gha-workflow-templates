name: 'AWS: EKS helm deploy'
description: 'Deploy a local helm chart to an AWS EKS cluster.'
author: 'XIP Online Applications'

branding:
    icon: 'cloud'
    color: 'blue'

inputs:
    command:
        description: 'The command to trigger the deployment. You can use two replacements: {0} = environment, {1} = tag.'
        required: true
    environment:
        description: 'The environment to build the container for.'
        required: true
    tag:
        description: 'The tag to use during the deployment.'
        default: 'latest'
    aws-role-arn:
        description: 'The AWS role to assume and perform AWS actions with.'
        required: true
    aws-region:
        description: 'The AWS region to push the image to.'
        required: true
    aws-session-name:
        description: 'The AWS session name to use when assuming the AWS role.'
        default: 'xip-gha-aws-eks-helm-deploy'
    aws-cluster-name:
        description: 'The AWS EKS cluster name.'
        required: true
    aws-kubernetes-role-arn:
        description: 'The AWS role to assume that has access to the Kubernetes namespace.'
        required: true
    helm-version:
        description: 'The helm version to install.'
        default: 'latest'
    github-token:
        description: 'The GitHub token to use for fetching the helm installation.'
        required: false
    git-crypt-key:
        description: 'The base64 encoded git-crypt decryption key'
        required: false
        default: ''

runs:
    using: 'composite'
    steps:
        -   name: Install helm
            uses: azure/setup-helm@v3
            with:
                version: ${{ inputs.helm-version }}
                token: ${{ inputs.github-token }}

        -   name: Git-crypt unlock
            if: ${{ inputs.git-crypt-key != '' }}
            uses: xip-online-applications/gha-workflow-templates/git-crypt-unlock@main
            with:
                git-crypt-key: ${{ inputs.git-crypt-key }}

        -   name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
                aws-region: ${{ inputs.aws-region }}
                role-to-assume: ${{ inputs.aws-role-arn }}
                role-session-name: ${{ inputs.aws-session-name }}

        -   name: Configure Kubectl for EKS
            shell: bash
            run: aws eks update-kubeconfig --name "${{ inputs.aws-cluster-name }}" --role-arn "${{ inputs.aws-kubernetes-role-arn }}" --region "${{ inputs.aws-region }}"

        -   name: Run deployment
            shell: bash
            run: ${{ format(inputs.command, inputs.environment, inputs.tag) }}
