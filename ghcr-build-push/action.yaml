name: 'ghcr.io: build & push'
description: 'Build a container and push it the GitHub container registry (ghcr.io).'
author: 'XIP Online Applications'

branding:
    icon: 'code'
    color: 'blue'

inputs:
    username:
        description: 'The username to use to push the image.'
        default: ${{ github.actor }}
    password:
        description: 'The password to use to push the image, usually a GitHub token.'
        default: ${{ github.token }}
    repository:
        description: 'The repository name to push the image to.'
        default: ${{ github.repository }}
    tag:
        description: 'The tag to apply to the container.'
        default: 'latest'
    context:
        description: 'The context to build the container from.'
        default: '.'
    dockerfile:
        description: 'The Dockerfile to use in the build.'
        default: 'Dockerfile'
    build-args:
        description: 'List of build-time variables.'
        default: ''
    target:
        description: 'The target to use in the build.'
        required: false
    platforms:
        description: 'The comma separated list of platforms to build the container for.'
        default: 'linux/amd64'

outputs:
    registry:
        value: ghcr.io/${{ inputs.repository }}
        description: 'The ghcr.io registry the image has been pushed to.'

runs:
    using: 'composite'
    steps:
        -   name: Set up QEMU
            uses: docker/setup-qemu-action@v3

        -   name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

        -   name: Login to ghcr.io
            uses: docker/login-action@v3
            with:
                registry: ghcr.io
                username: ${{ inputs.username }}
                password: ${{ inputs.password }}

        -   name: Build and push
            uses: docker/build-push-action@v5
            with:
                context: ${{ inputs.context }}
                file: ${{ inputs.dockerfile }}
                target: ${{ inputs.target }}
                push: true
                tags: ghcr.io/${{ inputs.repository }}:${{ inputs.tag }}
                build-args: |
                    ${{ inputs.build-args }}
                platforms: ${{ inputs.platforms }}
                cache-from: type=gha
                cache-to: type=gha,mode=max
